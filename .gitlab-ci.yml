image: docker:19.03.8

services:
  - docker:19.03.8-dind

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ''

stages:
  - test
  - build
  - deploy

test-lnd:
  stage: test
  image: adoptopenjdk/openjdk11
  tags:
    - wc
  only:
    - merge_request
  script:
    - ./mvnw test
  
build-lnd-dev:
  stage: build
  tags:
    - wc
  only:
    - dev
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - mkdir ./src/main/resources
    - echo "$DEV_APPLICATION_PROPERTIES" > ./src/main/resources/application.properties
    - echo "$DEV_APPLICATION_YML" > ./src/main/resources/application.yml
    - >
        docker build 
        --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA 
        --tag $CI_REGISTRY_IMAGE:latest 
        .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

deploy-lnd-dev:
    stage: deploy
    tags:
        - wc
    variables:
        GIT_STRATEGY: clone
    only:
        - dev
    before_script:
        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
        - eval $(ssh-agent -s)
        - echo "$daenerys_dev_private_key_new" | tr -d '\r' | ssh-add -
        - mkdir -p ~/.ssh
        - chmod 700 ~/.ssh
        - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    script:
        - |
            ssh $daenerys_dev_user@$daenerys_dev_app_node3_host << EOF
            docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
            docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
            docker stop lnd-service || true
            docker rm lnd-service || true
            docker run -d -p 8080:8080 --name lnd-service --restart unless-stopped $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
            sleep 60
            docker container logs lnd-service --tail 100
            EOF
        - echo Deployed to Dev!